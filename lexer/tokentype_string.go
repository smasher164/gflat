// Code generated by "stringer -type=TokenType"; DO NOT EDIT.

package lexer

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[EOF-0]
	_ = x[StatementTerminator-1]
	_ = x[Plus-2]
	_ = x[Minus-3]
	_ = x[Times-4]
	_ = x[Divide-5]
	_ = x[Remainder-6]
	_ = x[And-7]
	_ = x[Or-8]
	_ = x[Caret-9]
	_ = x[Tilde-10]
	_ = x[Backtick-11]
	_ = x[SingleQuote-12]
	_ = x[LessThan-13]
	_ = x[GreaterThan-14]
	_ = x[Equals-15]
	_ = x[Colon-16]
	_ = x[Not-17]
	_ = x[Comma-18]
	_ = x[Period-19]
	_ = x[Semicolon-20]
	_ = x[LeftParen-21]
	_ = x[RightParen-22]
	_ = x[LeftBrace-23]
	_ = x[RightBrace-24]
	_ = x[LeftBracket-25]
	_ = x[RightBracket-26]
	_ = x[DollarSign-27]
	_ = x[QuestionMark-28]
	_ = x[LogicalAnd-29]
	_ = x[LogicalOr-30]
	_ = x[LeftShift-31]
	_ = x[RightShift-32]
	_ = x[LogicalEquals-33]
	_ = x[FatArrow-34]
	_ = x[NotEquals-35]
	_ = x[LessThanEquals-36]
	_ = x[GreaterThanEquals-37]
	_ = x[ColonEquals-38]
	_ = x[Exponentiation-39]
	_ = x[DotDot-40]
	_ = x[LeftArrow-41]
	_ = x[RightArrow-42]
	_ = x[Fun-43]
	_ = x[Type-44]
	_ = x[Trait-45]
	_ = x[Import-46]
	_ = x[Let-47]
	_ = x[Var-48]
	_ = x[If-49]
	_ = x[Else-50]
	_ = x[Case-51]
	_ = x[Match-52]
	_ = x[Package-53]
	_ = x[Iso-54]
	_ = x[Ref-55]
	_ = x[Mut-56]
	_ = x[Pub-57]
	_ = x[Ident-58]
	_ = x[Number-59]
	_ = x[Whitespace-60]
	_ = x[SingleLineComment-61]
	_ = x[StringBeg-62]
	_ = x[StringPart-63]
	_ = x[StringEnd-64]
	_ = x[String-65]
	_ = x[Illegal-66]
}

const _TokenType_name = "EOFStatementTerminatorPlusMinusTimesDivideRemainderAndOrCaretTildeBacktickSingleQuoteLessThanGreaterThanEqualsColonNotCommaPeriodSemicolonLeftParenRightParenLeftBraceRightBraceLeftBracketRightBracketDollarSignQuestionMarkLogicalAndLogicalOrLeftShiftRightShiftLogicalEqualsFatArrowNotEqualsLessThanEqualsGreaterThanEqualsColonEqualsExponentiationDotDotLeftArrowRightArrowFunTypeTraitImportLetVarIfElseCaseMatchPackageIsoRefMutPubIdentNumberWhitespaceSingleLineCommentStringBegStringPartStringEndStringIllegal"

var _TokenType_index = [...]uint16{0, 3, 22, 26, 31, 36, 42, 51, 54, 56, 61, 66, 74, 85, 93, 104, 110, 115, 118, 123, 129, 138, 147, 157, 166, 176, 187, 199, 209, 221, 231, 240, 249, 259, 272, 280, 289, 303, 320, 331, 345, 351, 360, 370, 373, 377, 382, 388, 391, 394, 396, 400, 404, 409, 416, 419, 422, 425, 428, 433, 439, 449, 466, 475, 485, 494, 500, 507}

func (i TokenType) String() string {
	if i < 0 || i >= TokenType(len(_TokenType_index)-1) {
		return "TokenType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _TokenType_name[_TokenType_index[i]:_TokenType_index[i+1]]
}
