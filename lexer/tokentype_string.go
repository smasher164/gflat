// Code generated by "stringer -type=TokenType"; DO NOT EDIT.

package lexer

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[EOF-0]
	_ = x[LineTerminator-1]
	_ = x[Plus-2]
	_ = x[Minus-3]
	_ = x[Times-4]
	_ = x[Divide-5]
	_ = x[Remainder-6]
	_ = x[And-7]
	_ = x[Or-8]
	_ = x[Caret-9]
	_ = x[Tilde-10]
	_ = x[Backtick-11]
	_ = x[LessThan-12]
	_ = x[GreaterThan-13]
	_ = x[Assign-14]
	_ = x[Colon-15]
	_ = x[Not-16]
	_ = x[Comma-17]
	_ = x[Period-18]
	_ = x[Semicolon-19]
	_ = x[LeftParen-20]
	_ = x[RightParen-21]
	_ = x[LeftBrace-22]
	_ = x[RightBrace-23]
	_ = x[LeftBracket-24]
	_ = x[RightBracket-25]
	_ = x[DollarSign-26]
	_ = x[QuestionMark-27]
	_ = x[LogicalAnd-28]
	_ = x[LogicalOr-29]
	_ = x[LeftShift-30]
	_ = x[RightShift-31]
	_ = x[Pipe-32]
	_ = x[QuestionPipe-33]
	_ = x[LogicalEquals-34]
	_ = x[FatArrow-35]
	_ = x[NotEquals-36]
	_ = x[LessThanEquals-37]
	_ = x[GreaterThanEquals-38]
	_ = x[ColonEquals-39]
	_ = x[Exponentiation-40]
	_ = x[DotDot-41]
	_ = x[LeftArrow-42]
	_ = x[RightArrow-43]
	_ = x[Fun-44]
	_ = x[Type-45]
	_ = x[Trait-46]
	_ = x[Import-47]
	_ = x[Let-48]
	_ = x[Var-49]
	_ = x[If-50]
	_ = x[Else-51]
	_ = x[Case-52]
	_ = x[Match-53]
	_ = x[Package-54]
	_ = x[Iso-55]
	_ = x[Ref-56]
	_ = x[Mut-57]
	_ = x[Pub-58]
	_ = x[With-59]
	_ = x[Impl-60]
	_ = x[As-61]
	_ = x[Ident-62]
	_ = x[Number-63]
	_ = x[TypeArg-64]
	_ = x[Whitespace-65]
	_ = x[SingleLineComment-66]
	_ = x[StringBeg-67]
	_ = x[StringPart-68]
	_ = x[StringEnd-69]
	_ = x[String-70]
	_ = x[ImportPath-71]
	_ = x[Illegal-72]
}

const _TokenType_name = "EOFLineTerminatorPlusMinusTimesDivideRemainderAndOrCaretTildeBacktickLessThanGreaterThanAssignColonNotCommaPeriodSemicolonLeftParenRightParenLeftBraceRightBraceLeftBracketRightBracketDollarSignQuestionMarkLogicalAndLogicalOrLeftShiftRightShiftPipeQuestionPipeLogicalEqualsFatArrowNotEqualsLessThanEqualsGreaterThanEqualsColonEqualsExponentiationDotDotLeftArrowRightArrowFunTypeTraitImportLetVarIfElseCaseMatchPackageIsoRefMutPubWithImplAsIdentNumberTypeArgWhitespaceSingleLineCommentStringBegStringPartStringEndStringImportPathIllegal"

var _TokenType_index = [...]uint16{0, 3, 17, 21, 26, 31, 37, 46, 49, 51, 56, 61, 69, 77, 88, 94, 99, 102, 107, 113, 122, 131, 141, 150, 160, 171, 183, 193, 205, 215, 224, 233, 243, 247, 259, 272, 280, 289, 303, 320, 331, 345, 351, 360, 370, 373, 377, 382, 388, 391, 394, 396, 400, 404, 409, 416, 419, 422, 425, 428, 432, 436, 438, 443, 449, 456, 466, 483, 492, 502, 511, 517, 527, 534}

func (i TokenType) String() string {
	if i < 0 || i >= TokenType(len(_TokenType_index)-1) {
		return "TokenType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _TokenType_name[_TokenType_index[i]:_TokenType_index[i+1]]
}
