// Code generated by "stringer -type=TokenType"; DO NOT EDIT.

package lexer

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[EOF-0]
	_ = x[LineTerminator-1]
	_ = x[Plus-2]
	_ = x[Minus-3]
	_ = x[Times-4]
	_ = x[Divide-5]
	_ = x[Remainder-6]
	_ = x[And-7]
	_ = x[Or-8]
	_ = x[Caret-9]
	_ = x[Tilde-10]
	_ = x[Backtick-11]
	_ = x[SingleQuote-12]
	_ = x[LessThan-13]
	_ = x[GreaterThan-14]
	_ = x[Equals-15]
	_ = x[Colon-16]
	_ = x[Not-17]
	_ = x[Comma-18]
	_ = x[Period-19]
	_ = x[Semicolon-20]
	_ = x[LeftParen-21]
	_ = x[RightParen-22]
	_ = x[LeftBrace-23]
	_ = x[RightBrace-24]
	_ = x[LeftBracket-25]
	_ = x[RightBracket-26]
	_ = x[DollarSign-27]
	_ = x[QuestionMark-28]
	_ = x[LogicalAnd-29]
	_ = x[LogicalOr-30]
	_ = x[LeftShift-31]
	_ = x[RightShift-32]
	_ = x[LogicalEquals-33]
	_ = x[FatArrow-34]
	_ = x[NotEquals-35]
	_ = x[LessThanEquals-36]
	_ = x[GreaterThanEquals-37]
	_ = x[ColonEquals-38]
	_ = x[Exponentiation-39]
	_ = x[DotDot-40]
	_ = x[LeftArrow-41]
	_ = x[RightArrow-42]
	_ = x[Fun-43]
	_ = x[Type-44]
	_ = x[Trait-45]
	_ = x[Import-46]
	_ = x[Let-47]
	_ = x[Var-48]
	_ = x[If-49]
	_ = x[Else-50]
	_ = x[Case-51]
	_ = x[Match-52]
	_ = x[Package-53]
	_ = x[Iso-54]
	_ = x[Ref-55]
	_ = x[Mut-56]
	_ = x[Pub-57]
	_ = x[Where-58]
	_ = x[Ident-59]
	_ = x[Number-60]
	_ = x[Whitespace-61]
	_ = x[SingleLineComment-62]
	_ = x[StringBeg-63]
	_ = x[StringPart-64]
	_ = x[StringEnd-65]
	_ = x[String-66]
	_ = x[Illegal-67]
}

const _TokenType_name = "EOFLineTerminatorPlusMinusTimesDivideRemainderAndOrCaretTildeBacktickSingleQuoteLessThanGreaterThanEqualsColonNotCommaPeriodSemicolonLeftParenRightParenLeftBraceRightBraceLeftBracketRightBracketDollarSignQuestionMarkLogicalAndLogicalOrLeftShiftRightShiftLogicalEqualsFatArrowNotEqualsLessThanEqualsGreaterThanEqualsColonEqualsExponentiationDotDotLeftArrowRightArrowFunTypeTraitImportLetVarIfElseCaseMatchPackageIsoRefMutPubWhereIdentNumberWhitespaceSingleLineCommentStringBegStringPartStringEndStringIllegal"

var _TokenType_index = [...]uint16{0, 3, 17, 21, 26, 31, 37, 46, 49, 51, 56, 61, 69, 80, 88, 99, 105, 110, 113, 118, 124, 133, 142, 152, 161, 171, 182, 194, 204, 216, 226, 235, 244, 254, 267, 275, 284, 298, 315, 326, 340, 346, 355, 365, 368, 372, 377, 383, 386, 389, 391, 395, 399, 404, 411, 414, 417, 420, 423, 428, 433, 439, 449, 466, 475, 485, 494, 500, 507}

func (i TokenType) String() string {
	if i < 0 || i >= TokenType(len(_TokenType_index)-1) {
		return "TokenType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _TokenType_name[_TokenType_index[i]:_TokenType_index[i+1]]
}
